{"ast":null,"code":"var _jsxFileName = \"/Users/tobeyasinugo/dev/facechat_django/frontend/src/components/Subscriber.js\";\nimport React from 'react';\nimport { OTSubscriber } from 'opentok-react';\n\nclass Subscriber extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setAudio = audio => {\n      this.setState({\n        audio\n      });\n    };\n\n    this.setVideo = video => {\n      this.setState({\n        video\n      });\n    };\n\n    this.onError = err => {\n      this.setState({\n        error: `Failed to subscribe: ${err.message}`\n      });\n    };\n\n    this.state = {\n      error: null,\n      audio: false,\n      video: true\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(OTSubscriber, {\n      properties: {\n        subscribeToAudio: this.state.audio,\n        subscribeToVideo: this.state.video,\n        height: '100vh',\n        width: '100vw'\n      },\n      onError: this.onError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    });\n  }\n\n}\n\nexport default Subscriber;","map":{"version":3,"sources":["/Users/tobeyasinugo/dev/facechat_django/frontend/src/components/Subscriber.js"],"names":["React","OTSubscriber","Subscriber","Component","constructor","props","setAudio","audio","setState","setVideo","video","onError","err","error","message","state","render","subscribeToAudio","subscribeToVideo","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,eAA7B;;AAEA,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAUnBC,QAVmB,GAUPC,KAAD,IAAW;AACpB,WAAKC,QAAL,CAAc;AAAED,QAAAA;AAAF,OAAd;AACD,KAZkB;;AAAA,SAcnBE,QAdmB,GAcPC,KAAD,IAAW;AACpB,WAAKF,QAAL,CAAc;AAAEE,QAAAA;AAAF,OAAd;AACD,KAhBkB;;AAAA,SAkBnBC,OAlBmB,GAkBRC,GAAD,IAAS;AACjB,WAAKJ,QAAL,CAAc;AAAEK,QAAAA,KAAK,EAAG,wBAAuBD,GAAG,CAACE,OAAQ;AAA7C,OAAd;AACD,KApBkB;;AAGjB,SAAKC,KAAL,GAAa;AACXF,MAAAA,KAAK,EAAE,IADI;AAEXN,MAAAA,KAAK,EAAE,KAFI;AAGXG,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKD;;AAcDM,EAAAA,MAAM,GAAG;AACP,wBAEI,oBAAC,YAAD;AACE,MAAA,UAAU,EAAE;AACVC,QAAAA,gBAAgB,EAAE,KAAKF,KAAL,CAAWR,KADnB;AAEVW,QAAAA,gBAAgB,EAAE,KAAKH,KAAL,CAAWL,KAFnB;AAGVS,QAAAA,MAAM,EAAE,OAHE;AAIVC,QAAAA,KAAK,EAAE;AAJG,OADd;AAOE,MAAA,OAAO,EAAE,KAAKT,OAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ;AAYD;;AApCsC;;AAsCzC,eAAeT,UAAf","sourcesContent":["import React from 'react';\nimport { OTSubscriber } from 'opentok-react';\n \nclass Subscriber extends React.Component {\n  constructor(props) {\n    super(props);\n \n    this.state = {\n      error: null,\n      audio: false,\n      video: true\n    };\n  }\n \n  setAudio = (audio) => {\n    this.setState({ audio });\n  }\n \n  setVideo = (video) => {\n    this.setState({ video });\n  }\n \n  onError = (err) => {\n    this.setState({ error: `Failed to subscribe: ${err.message}` });\n  }\n \n  render() {\n    return (\n\n        <OTSubscriber\n          properties={{\n            subscribeToAudio: this.state.audio,\n            subscribeToVideo: this.state.video,\n            height: '100vh',\n            width: '100vw',\n          }}\n          onError={this.onError}\n        />\n    );\n  }\n}\nexport default Subscriber;"]},"metadata":{},"sourceType":"module"}