{"ast":null,"code":"var _jsxFileName = \"/Users/tobeyasinugo/dev/facechat_django/frontend/src/components/PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect, useLocation } from 'react-router-dom';\nimport { authenticationService } from '../services/auth.service';\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  const location = useLocation();\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => {\n      const currentUser = authenticationService.currentUser;\n\n      if (!currentUser) {\n        // not logged in so redirect to login page with the return url\n        console.log('ye');\n        console.log(encodeURIComponent);\n        console.log(location.pathname);\n        console.log(location.search);\n        const currentUrl = encodeURIComponent(location.pathname + location.search);\n        const authurl = `/login/?next=${currentUrl}`;\n        console.log(authurl);\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: {\n            pathname: authurl,\n            state: {\n              from: props.location\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 20\n          }\n        });\n      } // authorised so return component\n\n\n      return /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 16\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/Users/tobeyasinugo/dev/facechat_django/frontend/src/components/PrivateRoute.js"],"names":["React","Route","Redirect","useLocation","authenticationService","PrivateRoute","component","Component","rest","location","props","currentUser","console","log","encodeURIComponent","pathname","search","currentUrl","authurl","state","from"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,kBAA7C;AAEA,SAASC,qBAAT,QAAsC,0BAAtC;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AACxD,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAEA,sBAAQ,oBAAC,KAAD,oBAAWK,IAAX;AAAiB,IAAA,MAAM,EAAEE,KAAK,IAAI;AACtC,YAAMC,WAAW,GAAGP,qBAAqB,CAACO,WAA1C;;AACA,UAAI,CAACA,WAAL,EAAkB;AACd;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYC,kBAAZ;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACM,QAArB;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACO,MAArB;AACA,cAAMC,UAAU,GAAGH,kBAAkB,CAACL,QAAQ,CAACM,QAAT,GAAoBN,QAAQ,CAACO,MAA9B,CAArC;AACA,cAAME,OAAO,GAAI,gBAAeD,UAAW,EAA3C;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAYK,OAAZ;AACA,4BAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAAEH,YAAAA,QAAQ,EAAEG,OAAZ;AAAqBC,YAAAA,KAAK,EAAE;AAAEC,cAAAA,IAAI,EAAEV,KAAK,CAACD;AAAd;AAA5B,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAZqC,CActC;;;AACA,0BAAO,oBAAC,SAAD,oBAAeC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACH,KAhBO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAR;AAiBH,CApBD;;AAuBA,eAAeL,YAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect, useLocation } from 'react-router-dom';\n\nimport { authenticationService } from '../services/auth.service';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n    const location = useLocation();\n\n    return (<Route {...rest} render={props => {\n        const currentUser = authenticationService.currentUser;\n        if (!currentUser) {\n            // not logged in so redirect to login page with the return url\n            console.log('ye')\n            console.log(encodeURIComponent)\n            console.log(location.pathname)\n            console.log(location.search)\n            const currentUrl = encodeURIComponent(location.pathname + location.search)\n            const authurl = `/login/?next=${currentUrl}`\n            console.log(authurl)\n            return <Redirect to={{ pathname: authurl, state: { from: props.location } }} />\n        }\n\n        // authorised so return component\n        return <Component {...props} />\n    }} />)\n}\n\n\nexport default PrivateRoute"]},"metadata":{},"sourceType":"module"}