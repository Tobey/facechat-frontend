{"ast":null,"code":"import { authenticationService } from '../services/auth.service';\nexport function Fetch(url, options) {\n  const expired = authenticationService.isExpired();\n\n  if (expired) {\n    console.log('token exp');\n    authenticationService.refresh();\n  } else {\n    console.log('not exp');\n  }\n\n  let headers = authenticationService.authHeader();\n\n  if (options && options.headers) {\n    headers = Object.assign({}, options.headers, headers);\n    options.headers = headers;\n  } else {\n    options = {\n      headers\n    };\n  }\n\n  console.log('headers ', headers);\n  console.log('url ', url);\n  console.log('options ', options);\n  return fetch.apply(this, [url, options, ...arguments]);\n}","map":{"version":3,"sources":["/Users/tobeyasinugo/dev/facechat_django/frontend/src/helpers/auth-request.js"],"names":["authenticationService","Fetch","url","options","expired","isExpired","console","log","refresh","headers","authHeader","Object","assign","fetch","apply","arguments"],"mappings":"AAAA,SAASA,qBAAT,QAAqC,0BAArC;AAGA,OAAO,SAASC,KAAT,CAAeC,GAAf,EAAoBC,OAApB,EAA6B;AAChC,QAAMC,OAAO,GAAGJ,qBAAqB,CAACK,SAAtB,EAAhB;;AACA,MAAID,OAAJ,EAAa;AACTE,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAP,IAAAA,qBAAqB,CAACQ,OAAtB;AACH,GAHD,MAGO;AACHF,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AAEH;;AAED,MAAIE,OAAO,GAAGT,qBAAqB,CAACU,UAAtB,EAAd;;AACA,MAAIP,OAAO,IAAIA,OAAO,CAACM,OAAvB,EAAgC;AAC5BA,IAAAA,OAAO,GAAGE,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBT,OAAO,CAACM,OAA1B,EAAmCA,OAAnC,CAAV;AACAN,IAAAA,OAAO,CAACM,OAAR,GAAkBA,OAAlB;AACH,GAHD,MAGO;AACHN,IAAAA,OAAO,GAAG;AACNM,MAAAA;AADM,KAAV;AAGH;;AACDH,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBE,OAAxB;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBL,GAApB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBJ,OAAxB;AACA,SAAOU,KAAK,CAACC,KAAN,CAAY,IAAZ,EAAkB,CAACZ,GAAD,EAAMC,OAAN,EAAe,GAAGY,SAAlB,CAAlB,CAAP;AACH","sourcesContent":["import { authenticationService} from '../services/auth.service';\n\n\nexport function Fetch(url, options) {\n    const expired = authenticationService.isExpired()\n    if (expired) {\n        console.log('token exp')\n        authenticationService.refresh()\n    } else {\n        console.log('not exp')\n\n    }\n\n    let headers = authenticationService.authHeader()\n    if (options && options.headers) {\n        headers = Object.assign({}, options.headers, headers);\n        options.headers = headers\n    } else {\n        options = {\n            headers\n        }\n    }\n    console.log('headers ', headers);\n    console.log('url ', url);\n    console.log('options ', options);\n    return fetch.apply(this, [url, options, ...arguments]) \n}"]},"metadata":{},"sourceType":"module"}