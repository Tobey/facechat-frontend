{"ast":null,"code":"var _jsxFileName = \"/Users/tobeyasinugo/dev/facechat_django/frontend/src/components/PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect, useLocation } from 'react-router-dom';\nimport { authenticationService } from '../services/auth.service';\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n  render: props => {\n    const location = useLocation();\n    const currentUser = authenticationService.currentUser;\n\n    if (!currentUser) {\n      // not logged in so redirect to login page with the return url\n      console.log('ye');\n      console.log(encodeURIComponent);\n      console.log(this.props.location.pathname);\n      console.log(this.props.location.search);\n      const currentUrl = encodeURIComponent(this.props.location.pathname + this.props.location.search);\n      const authurl = `/login/?next=${currentUrl}`;\n      console.log(authurl);\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: authurl,\n          state: {\n            from: props.location\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 20\n        }\n      });\n    } // authorised so return component\n\n\n    return /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 16\n      }\n    }));\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }\n}));\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/Users/tobeyasinugo/dev/facechat_django/frontend/src/components/PrivateRoute.js"],"names":["React","Route","Redirect","useLocation","authenticationService","PrivateRoute","component","Component","rest","props","location","currentUser","console","log","encodeURIComponent","pathname","search","currentUrl","authurl","state","from"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,kBAA7C;AAEA,SAASC,qBAAT,QAAsC,0BAAtC;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,kBAGjB,oBAAC,KAAD,oBAAWA,IAAX;AAAiB,EAAA,MAAM,EAAEC,KAAK,IAAI;AAC9B,UAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,UAAMQ,WAAW,GAAGP,qBAAqB,CAACO,WAA1C;;AACA,QAAI,CAACA,WAAL,EAAkB;AACd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYC,kBAAZ;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWC,QAAX,CAAoBK,QAAhC;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWC,QAAX,CAAoBM,MAAhC;AACA,YAAMC,UAAU,GAAGH,kBAAkB,CAAC,KAAKL,KAAL,CAAWC,QAAX,CAAoBK,QAApB,GAA+B,KAAKN,KAAL,CAAWC,QAAX,CAAoBM,MAApD,CAArC;AACA,YAAME,OAAO,GAAI,gBAAeD,UAAW,EAA3C;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYK,OAAZ;AACA,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAAEH,UAAAA,QAAQ,EAAEG,OAAZ;AAAqBC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEX,KAAK,CAACC;AAAd;AAA5B,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAb6B,CAe9B;;;AACA,wBAAO,oBAAC,SAAD,oBAAeD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACH,GAjBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAHJ;;AAwBA,eAAeJ,YAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect, useLocation } from 'react-router-dom';\n\nimport { authenticationService } from '../services/auth.service';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n\n\n    <Route {...rest} render={props => {\n        const location = useLocation();\n        const currentUser = authenticationService.currentUser;\n        if (!currentUser) {\n            // not logged in so redirect to login page with the return url\n            console.log('ye')\n            console.log(encodeURIComponent)\n            console.log(this.props.location.pathname)\n            console.log(this.props.location.search)\n            const currentUrl = encodeURIComponent(this.props.location.pathname + this.props.location.search)\n            const authurl = `/login/?next=${currentUrl}`\n            console.log(authurl)\n            return <Redirect to={{ pathname: authurl, state: { from: props.location } }} />\n        }\n\n        // authorised so return component\n        return <Component {...props} />\n    }} />\n)\n\n\nexport default PrivateRoute"]},"metadata":{},"sourceType":"module"}