{"ast":null,"code":"const {\n  webSocket\n} = require('rxjs/webSocket');\n\nconst createWebSocketConnection = ({\n  url,\n  params\n}) => {\n  const query = new URLSearchParams(params).toString();\n  return webSocket({\n    url: `${url}?${query}`\n  });\n};\n\nconst listenToWebSocketConnection = ({\n  callback,\n  connectionInfo,\n  reconnectTimeout = 5000\n}) => createWebSocketConnection(connectionInfo).subscribe({\n  error: timer(reconnectTimeout).subscribe(() => listenToWebSocketConnection(callback)),\n  next: callback\n});\n\nexport const wsService = {\n  createWebSocketConnection,\n  listenToWebSocketConnection\n};","map":{"version":3,"sources":["/Users/tobeyasinugo/dev/facechat_django/frontend/src/services/ws.service.js"],"names":["webSocket","require","createWebSocketConnection","url","params","query","URLSearchParams","toString","listenToWebSocketConnection","callback","connectionInfo","reconnectTimeout","subscribe","error","timer","next","wsService"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAgBC,OAAO,CAAC,gBAAD,CAA7B;;AAEA,MAAMC,yBAAyB,GAAG,CAAC;AACjCC,EAAAA,GADiC;AAEjCC,EAAAA;AAFiC,CAAD,KAG5B;AAEJ,QAAOC,KAAK,GAAG,IAAIC,eAAJ,CAAoBF,MAApB,EAA4BG,QAA5B,EAAf;AACA,SAAOP,SAAS,CAAC;AACfG,IAAAA,GAAG,EAAG,GAAEA,GAAI,IAAGE,KAAM;AADN,GAAD,CAAhB;AAGD,CATD;;AAWA,MAAMG,2BAA2B,GAAG,CAAC;AACjCC,EAAAA,QADiC;AAEjCC,EAAAA,cAFiC;AAGjCC,EAAAA,gBAAgB,GAAG;AAHc,CAAD,KAKhCT,yBAAyB,CACvBQ,cADuB,CAAzB,CAGCE,SAHD,CAGW;AACTC,EAAAA,KAAK,EACHC,KAAK,CACHH,gBADG,CAAL,CAGCC,SAHD,CAGW,MACTJ,2BAA2B,CACzBC,QADyB,CAJ7B,CAFO;AAWTM,EAAAA,IAAI,EAAEN;AAXG,CAHX,CALJ;;AAyBE,OAAO,MAAMO,SAAS,GAAG;AACvBd,EAAAA,yBADuB;AAEvBM,EAAAA;AAFuB,CAAlB","sourcesContent":["const { webSocket } = require('rxjs/webSocket')\n\nconst createWebSocketConnection = ({\n  url,\n  params,\n}) => {\n\n  const  query = new URLSearchParams(params).toString()\n  return webSocket({\n    url: `${url}?${query}`\n  })\n}\n\nconst listenToWebSocketConnection = ({\n    callback,\n    connectionInfo,\n    reconnectTimeout = 5000,\n  }) => (\n    createWebSocketConnection(\n      connectionInfo\n    )\n    .subscribe({\n      error: (\n        timer(\n          reconnectTimeout,\n        )\n        .subscribe(() => (\n          listenToWebSocketConnection(\n            callback\n          )\n        ))\n      ),\n      next: callback,\n    })\n  )\n\n\n\n  export const wsService = {\n    createWebSocketConnection,\n    listenToWebSocketConnection,\n};"]},"metadata":{},"sourceType":"module"}