{"ast":null,"code":"var _jsxFileName = \"/Users/tobeyasinugo/dev/facechat_django/frontend/src/components/Publisher.js\";\nimport React from 'react';\nimport { OTPublisher, OTSubscriber } from 'opentok-react';\nimport CheckBox from './CheckBox';\nimport { Container } from 'semantic-ui-react';\nimport '../pages/chat.css';\n\nclass Publisher extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setAudio = audio => {\n      this.setState({\n        audio\n      });\n    };\n\n    this.setVideo = video => {\n      this.setState({\n        video\n      });\n    };\n\n    this.changeVideoSource = videoSource => {\n      this.state.videoSource !== 'camera' ? this.setState({\n        videoSource: 'camera'\n      }) : this.setState({\n        videoSource: 'screen'\n      });\n    };\n\n    this.onError = err => {\n      this.setState({\n        error: `Failed to publish: ${err.message}`\n      });\n    };\n\n    this.state = {\n      error: null,\n      audio: false,\n      video: true,\n      videoSource: 'camera'\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(OTPublisher, {\n      properties: {\n        publishAudio: this.state.audio,\n        publishVideo: this.state.video,\n        videoSource: this.state.videoSource === 'screen' ? 'screen' : undefined,\n        height: '30vh',\n        width: '30vw' // height: '100vh',\n        // width: '100vw',\n\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 14\n      }\n    });\n  }\n\n}\n\nexport default Publisher;","map":{"version":3,"sources":["/Users/tobeyasinugo/dev/facechat_django/frontend/src/components/Publisher.js"],"names":["React","OTPublisher","OTSubscriber","CheckBox","Container","Publisher","Component","constructor","props","setAudio","audio","setState","setVideo","video","changeVideoSource","videoSource","state","onError","err","error","message","render","publishAudio","publishVideo","undefined","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,eAA1C;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAO,mBAAP;;AAEA,MAAMC,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASjBC,QATiB,GASLC,KAAD,IAAW;AACpB,WAAKC,QAAL,CAAc;AAAED,QAAAA;AAAF,OAAd;AACD,KAXgB;;AAAA,SAajBE,QAbiB,GAaLC,KAAD,IAAW;AACpB,WAAKF,QAAL,CAAc;AAAEE,QAAAA;AAAF,OAAd;AACD,KAfgB;;AAAA,SAiBjBC,iBAjBiB,GAiBIC,WAAD,IAAiB;AAClC,WAAKC,KAAL,CAAWD,WAAX,KAA2B,QAA5B,GAAwC,KAAKJ,QAAL,CAAc;AAACI,QAAAA,WAAW,EAAE;AAAd,OAAd,CAAxC,GAAiF,KAAKJ,QAAL,CAAc;AAAEI,QAAAA,WAAW,EAAE;AAAf,OAAd,CAAjF;AACD,KAnBgB;;AAAA,SAqBjBE,OArBiB,GAqBNC,GAAD,IAAS;AACjB,WAAKP,QAAL,CAAc;AAAEQ,QAAAA,KAAK,EAAG,sBAAqBD,GAAG,CAACE,OAAQ;AAA3C,OAAd;AACD,KAvBgB;;AAEjB,SAAKJ,KAAL,GAAa;AACXG,MAAAA,KAAK,EAAE,IADI;AAEXT,MAAAA,KAAK,EAAE,KAFI;AAGXG,MAAAA,KAAK,EAAE,IAHI;AAIXE,MAAAA,WAAW,EAAE;AAJF,KAAb;AAMD;;AAiBCM,EAAAA,MAAM,GAAG;AACP,wBACK,oBAAC,WAAD;AACC,MAAA,UAAU,EAAE;AACVC,QAAAA,YAAY,EAAE,KAAKN,KAAL,CAAWN,KADf;AAEVa,QAAAA,YAAY,EAAG,KAAKP,KAAL,CAAWH,KAFhB;AAGVE,QAAAA,WAAW,EAAE,KAAKC,KAAL,CAAWD,WAAX,KAA2B,QAA3B,GAAsC,QAAtC,GAAiDS,SAHpD;AAIVC,QAAAA,MAAM,EAAE,MAJE;AAKVC,QAAAA,KAAK,EAAE,MALG,CAMV;AACA;;AAPU,OADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADL;AAcE;;AAzC8B;;AA2CtC,eAAerB,SAAf","sourcesContent":["import React from 'react';\nimport { OTPublisher, OTSubscriber } from 'opentok-react';\nimport CheckBox from './CheckBox';\nimport { Container } from 'semantic-ui-react'\nimport '../pages/chat.css';\n\nclass Publisher extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        error: null,\n        audio: false,\n        video: true,\n        videoSource: 'camera'\n      };\n    }\n      setAudio = (audio) => {\n        this.setState({ audio });\n      }\n     \n      setVideo = (video) => {\n        this.setState({ video });\n      }\n     \n      changeVideoSource = (videoSource) => {\n        (this.state.videoSource !== 'camera') ? this.setState({videoSource: 'camera'}) : this.setState({ videoSource: 'screen' })\n      }\n     \n      onError = (err) => {\n        this.setState({ error: `Failed to publish: ${err.message}` });\n      }\n   \n      render() {\n        return (\n             <OTPublisher \n              properties={{\n                publishAudio: this.state.audio,\n                publishVideo:  this.state.video,\n                videoSource: this.state.videoSource === 'screen' ? 'screen' : undefined,\n                height: '30vh',\n                width: '30vw',\n                // height: '100vh',\n                // width: '100vw',\n              }}\n\n          ></OTPublisher>\n\n        )};\n  }\n  export default Publisher;\n"]},"metadata":{},"sourceType":"module"}